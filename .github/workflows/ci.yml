name: Lint and Security Scan

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  lint:
    name: Lint Go Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.3"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v5
        with:
          version: latest
          args: --timeout 5m
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
      GOFLAGS: -buildvcs=false
      GOTOOLCHAIN: auto
    steps:
      - name: Checkout workflow
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.3"
      - name: Run gosec security scanner
        uses: securego/gosec@master
        with:
          args: ./...
        
  ghcr-image:
    name: Build and Push Image to GHCR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.3"
      - name: Create .env file from GitHub Variable
        run: echo "${{ vars.OVOYAGERS_ENV }}" > .env
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}  
          docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest